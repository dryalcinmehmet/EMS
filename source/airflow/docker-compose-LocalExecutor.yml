version: '2.1'
services:
    portainer:
      image: portainer/portainer
      command: -H unix:///var/run/docker.sock
      restart: always
      ports:
        - 9000:9000
        - 8000:8000
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - portainer_data:/data
    postgres:
        image: postgres:12.0-alpine
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        ports:
          - 5432:5432
    webserver:
        image: apache/airflow
        build:
            context: .
            dockerfile: Dockerfile
        restart: always
        depends_on:
            - postgres
        environment:
            - LOAD_EX=n
            - EXECUTOR=Local
        volumes:
            - ./dags:/usr/local/airflow/dags
            # Uncomment to include custom plugins
            - ./plugins:/usr/local/airflow/plugins
        ports:
            - "8080:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3
    elasticsearch:
        labels:
            com.example.service: "elasticsearch"
            com.example.description: "For searching and indexing data"
        image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - network.publish_host=0.0.0.0
        volumes:
            - esdata
            - /usr/share/elasticsearch/data/
        ports:
            - 9200:9200
    kibana:
        labels:
            com.example.service: "kibana"
            com.example.description: "Data visualisation and for log aggregation"
        image: kibana:7.4.2
        container_name: kibana
        ports:
            - 5601:5601
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
        depends_on:
            - elasticsearch
    logstash:
        labels:
            com.example.service: "logstash"
            com.example.description: "For logging data"
        image: logstash:7.4.2
        volumes:
           - ./:/logstash_dir
        command: logstash -f /elk/logstash.conf
        depends_on:
           - elasticsearch
        ports:
           - 5959:5959
volumes:
  portainer_data:
  esdata: